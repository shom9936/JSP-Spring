JCF ( Java Collection Framework )

	JAVA에서 컬렉션( Collection )이란 데이터의 집합, 그룹을 의미하며
	JCF는 이러한 데이터, 자료구조인 컬렉션과 이를 구현하는 클래스를 정의하는
	인터페이스를 제공한다.

	Collection 인터페이스는 List, Set, Queue로 크게 3가지 상위 인터페이스로 분류할 수 있다.
	Map의 경우 Collection 인터페이스를 상속받고 있지 않지만 Collection으로 분류된다.

1. Set 인터페이스

	순서를 유지하지 않는 데이터의 집합으로 데이터의 중복을 허용하지 않는다.

	1-1 ) HashSet
		- 가장 빠른 임의 접근 속도
		- 순서를 예측할 수 없음

	1-2 ) TreeSet
		- 정렬방법을 지정할 수 있음

2. List 인터페이스

	순서가 있는 데이터의 집합으로 데이터의 중복을 허용한다.

	2-1 ) LinkedList
		- 양방향 포인터 구조로 데이터의 삽입, 삭제가 빈번할 경우 데이터의 위치정보만 수정하면 되기에 유용하다.
	
	2-2 ) Vector
		- 과거에 대용량 처리를위해 사용했으며, 내부에서 자동으로 동기화처리가 일어나 비교적 성능이 좋지않고 무거워 잘 쓰이지 않음

	2-3 ) ArrayList
		- 단방향 포인터 구조로 각 데이터에 대한 인덱스를 가지고 있어 조회 기능에 성능이 뛰어남

3. Map 인터페이스

	키( Key ), 값 ( Value )의 쌍으로 이루어진 데이터의 집합으로, 순서는 유지되지 않으며 키의 중복은 허용하지 않으나 값의 중복은 허용한다.

	3-1 ) Hashtable
		- HashMap보다는 느리지만 동기화를 지원한다.
		- null 불가

	3-2 ) HashMap
		- 중복과 순서가 허용되지 않으며 null 값이 올 수 있다.

	3-3 ) TreeMap
		- 정렬된 순서대로 키 ( Key )와 값 ( Value )을 저장하여 검색이 빠르다.	